@model TrashCollector2.Models.CustomerDayViewModel
<head>
    @{
        ViewBag.Title = "Route";
    }

    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCNZBZ-K-1CjSzNCyXXsFnLYRQYt-wYIC8&callback=initMap" async defer></script>

</head>

<h2>Today's Customers</h2>
<style>
    #map {
        height: 300px;
        width: 500px;
    }
</style>
<div>
    <div id="map"></div>
</div>
<script>
    var map;
    var stopMarker;
    var firstStop = { lat: 43.034434, lng: -87.911967 },
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: firstStop,
            zoom: 10,
            zoomControl: true,
            zoomControlOptions: {
                position: google.maps.ControlPosition.LEFT_BOTTOM
            },
        });
        stopMarker = new google.maps.Marker({
            position: firstStop,
            map: map
        })
    }
</script>
<br />
<br />
<table class="table">
    <tr>
        <th>
            @Html.DisplayName("Last Name")

        </th>
        <th>
            @Html.DisplayName("Street Address")

        </th>
        <th>
            @Html.DisplayName("Zip Code")

        </th>
        <th>
            @Html.DisplayName("Balance Due")

        </th>
        <th>
            @Html.DisplayName("Charge Customer")
        </th>
        <th>
            @Html.DisplayName("Pick Up Complete")
        </th>
    </tr>

    @foreach (var item in Model.Customers)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StreetAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ZipCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BalanceDue)
            </td>
            <td>
                <div class="col-md-offset-0 col-md-10">
                    @Html.ActionLink("Complete", "Button_Click", "Employees", new { customerId = item.CustomerId }, new { @class = "btn btn-success btn-large" })
                </div>
            </td>
            <td>
                <div class="col-md-offset-0 col-md-10">
                    <input type="checkbox" class="checkbox" />
                </div>
            </td>
            @*<td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.CustomerId }) |
                        @Html.ActionLink("Details", "Details", new { id = item.CustomerId })
                </td>*@
        </tr>
    }

</table>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div row>
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.PickUpDay, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.PickUpDay, new SelectList(ViewBag.Days), "Choose day", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PickUpDay, "Choose to view another day from the drop down, then 'Select'", new { @class = "text-danger" })
                </div>
                <div class="col-md-offset-0 col-md-1">
                    <input type="submit" value="Select" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

